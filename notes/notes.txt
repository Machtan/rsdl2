


A Window can only have one renderer associated with it (Option<Renderer> ish)
[SDL_Render.c:232]

Most types should probably internally be an Rc-type with a refcell included...
I'm not sure if this will be bad for performance, but it seems the best way
to handle drop deallocation/deinitialization properly.

Destroying a renderer frees the associated textures.
[wiki.libsdl.org/SDL_DestroyRenderer]

The backbuffer should be considered invalidated after each present; do not assume that previous contents will exist between frames. You are strongly encouraged to call SDL_RenderClear() to initialize the backbuffer before starting each new frame's drawing, even if you plan to overwrite every pixel.
[wiki.libsdl.org/SDL_RenderPresent]

Renderers have a field 'magic' which shows whether they are still alive or not.
This means that they aren't deallocated on destroy, but instead stays around to ensure that 'dangling' usage is still safe (though it raises SDL errors on every usage).

Every window has a pointer to its renderer, and the renderer has a pointer to its window.
